on:
  push:
    branches:
      - main
    paths:
      - "**.py"
      - "pyproject.toml"
      - ".gitignore"
      - ".github/workflows/**"
      - "README.md"
      - "LICENSE"
    tags:
      - "v*"
  pull_request:
jobs:
  lib_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        extra: ["all,test", "sql,test", "redis,test", "mongo,test"]

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mongo_container

      redis:
        image: redis/redis-stack-server
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies [${{ matrix.extra }}]
        run: |
          python -m pip install --upgrade pip
          python --version
          pip install ."[${{ matrix.extra }}]"
      - name: Lint with black
        run: black --check .
      - name: Run tests
        run: |
          cd $GITHUB_WORKSPACE
          pytest tests

  examples_test:
    runs-on: ubuntu-latest
    needs: lib_test
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        example_app: ["todos"]

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mongo_container

      redis:
        image: redis/redis-stack-server
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test app '[${{ matrix.example_app }}]'
        run: |
          cd $GITHUB_WORKSPACE/examples/${{ matrix.example_app }}
          python -m pip install --upgrade pip
          python --version
          pip install -r requirements.txt
          pip install -U ../.."[all]"
          black --check .
          pytest .

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: examples_test
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE
          python -m pip install --upgrade pip
          python --version
          pip install ."[test,sql,mongo,redis]"
          pip install build twine
      - name: Build
        run: python -m build
      - name: Upload to pypi
        run: twine upload --skip-existing -u __token__ -p ${{ secrets.TINI_PYPI_TOKEN }} dist/*